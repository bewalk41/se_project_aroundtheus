!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_setEventListener(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{"function"==typeof this._handleImageClick&&this._handleImageClick(this._link,this._name)}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement.querySelector(".card__header").textContent=this._name;const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._setEventListener(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls=Array.from(this._formElement.querySelectorAll(this._inputSelector))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent="",e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}toggleButtonState(){this._toggleButtonState()}},s=class{constructor(e){this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("mousedown",(e=>{e.target===this._popupElement&&this.close()}))}},n=class extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=Array.from(this._form.querySelectorAll(".modal__input"))}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset(),this.close()}))}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}},r=class extends s{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__image"),this._captionElement=this._popupElement.querySelector(".modal__caption")}open(e){let{name:t,link:s}=e;this._imageElement.src=s,this._imageElement.alt=t,this._captionElement.textContent=t,super.open()}},o=class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}},i=class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}},a=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse).catch((e=>{throw console.error("Failed to fetch initial cards:",e),e}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse).catch((e=>{throw console.error("Failed to fetch user info:",e),e}))}setUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse).catch((e=>{throw console.error("Failed to update user info:",e),e}))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse).catch((e=>{throw console.error("Failed to add card:",e),e}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"53409dbf-84c2-43f0-94a8-bcee506cb677","Content-Type":"application/json"}});const l={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};document.addEventListener("DOMContentLoaded",(()=>{const s=document.querySelector("#profile-edit-button"),c=document.querySelector("#add-card-button"),d=new o({nameSelector:".profile__name",jobSelector:".profile__description",avatarSelector:".profile__avatar"}),h=new t(l,document.querySelector("#profile-edit-modal .modal__form")),_=new t(l,document.querySelector("#add-card-modal .modal__form"));h.enableValidation(),_.enableValidation();const u=(e,t)=>{E.open({name:t,link:e})},m=new n("#profile-edit-modal",(e=>{a.setUserInfo({name:e.heading,about:e.description}).then((e=>{d.setUserInfo({name:e.name,job:e.about}),m.close()})).catch((e=>console.error("Failed to update profile:",e)))})),p=new n("#add-card-modal",(e=>{const t={name:e.heading,link:e.description};a.addCard(t).then((e=>{const t=b(e);f.addItem(t),p.close()})).catch((e=>console.error("Failed to add card:",e)))})),E=new r("#image-modal");function b(t){return new e(t,"#card-template",u).getView()}m.setEventListeners(),p.setEventListeners(),E.setEventListeners();const f=new i({items:[],renderer:e=>{const t=b(e);f.addItem(t)}},".cards__list");Promise.all([a.getUserInfo(),a.getInitialCards()]).then((e=>{let[t,s]=e;d.setUserInfo({name:t.name,job:t.about,avatar:t.avatar}),f.renderItems(s)})).catch((e=>console.error("Failed to load initial data:",e))),s.addEventListener("click",(()=>{const e=d.getUserInfo();m.setInputValues({heading:e.name,description:e.job}),m.open(),h.resetValidation()})),c.addEventListener("click",(()=>{p.open(),_.toggleButtonState()}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,